#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Tue May  9 10:01:14 2017

This routine is meant to test the routine COVandREL.py by using the statistical property that 
Elm(r) = <alm(0) a22(r)>/sqrt(Cl)*sqrt(a22)
so that |Elm|<= 1

See pg 57 in notes for more details.

@author: arsalanadil
"""

import numpy as np
import COVandREL as CovRel
import LocalPS as Local
import VarMatrix_Generalized as Remote
import matplotlib.pyplot as plt

def CrossCM(cluster, lmax):
    cross = CovRel.CrossCMB(np.array([cluster,cluster]),lmax,1)
    k = 0
    crossTemp = np.zeros(lmax-1).astype(complex)
    
    for l in range(2,lmax+1):
        print(cross[1][0])
        k += 2*l+1
        crossTemp[l-2] = cross[1][0][k-1]
    
    return crossTemp

def powerSpec(k):
    
    if(k==0):
        return 0
    
    else:
        return 1/k**3

def RemoteCM(cluster):
    temp = Remote.wignerRotation(cluster,cluster)[0]
    
    return temp[0][0]

def Elm(cluster,lmax):

    cross = CrossCM(cluster,lmax)
    remote = RemoteCM(cluster)
    local = np.zeros(lmax-1)
    
    for l in range(2, lmax+1):
        local[l-2] = 256.2791* Local.Integral(l,powerSpec)
    print("Local:",local)
    
    vals = np.zeros(lmax-1)
    for i in range(0,lmax-1):
        vals[i] = np.abs( cross[i]/(np.sqrt(local[i]) * np.sqrt(remote ) ) )
        
    return vals

a = np.array([0.1,0,0])
temp = Elm(a,4)
print(temp)
plt.plot(np.array([2,3,4]),temp)